name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CI: false
  NEXT_TELEMETRY_DISABLED: 1
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Clean and install dependencies
      run: |
        npm cache clean --force
        rm -rf node_modules package-lock.json
        npm install --legacy-peer-deps
        
    - name: Build application with debug
      run: |
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "CI environment: $CI"
        echo "Starting build..."
        npm run ci-build
      env:
        CI: false
        NEXT_TELEMETRY_DISABLED: 1
        NODE_ENV: production
        
    - name: Verify build output
      run: |
        ls -la .next/
        echo "‚úÖ Build completed successfully!"
        
    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix=sha-
          type=raw,value=latest,enable={{is_default_branch}}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        
    - name: Deploy to staging
      if: github.ref == 'refs/heads/main'
      run: |
        echo "üöÄ Deploying to staging..."
        curl -X POST "${{ secrets.PORTAINER_WEBHOOK_URL }}" \
          -H "Content-Type: application/json" \
          -d '{"ref":"refs/heads/main","repository":{"full_name":"${{ github.repository }}"}}' \
          --max-time 30 || echo "‚ö†Ô∏è Webhook deployment attempted (may have timed out)"
        
    - name: Success notification
      if: success()
      run: |
        echo "üéâ DEPLOYMENT SUCCESSFUL!"
        echo "‚úÖ Build: Complete"
        echo "‚úÖ Docker: Pushed to ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        echo "‚úÖ Deploy: Webhook triggered"
